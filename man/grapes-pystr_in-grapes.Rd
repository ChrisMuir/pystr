% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pystr_in.R
\name{\%pystr_in\%}
\alias{\%pystr_in\%}
\title{String lookups}
\usage{
x \%pystr_in\% table
}
\arguments{
\item{x}{A character vector.}

\item{table}{A character vector, list, or environment.}
}
\value{
A logical vector with length 1.
}
\description{
Perform lookups at the character vector and substring level.
}
\examples{
# Is string in string (substring lookup).
"cats" \%pystr_in\% "I like cats quite a bit"

# Is string in char vector.
"cats" \%pystr_in\% c("dogs", "cats", "ducks")

# Is string in environment keys.
table <- new.env()
table$cats <- "blah1"
table$dogs <- "blah2"
"cats" \%pystr_in\% table # TRUE
"blah1" \%pystr_in\% table # FALSE

# string in list.
"cats" \%pystr_in\% list("dogs", "cats", "ducks")

# char vector in list.
c("yay", "cats") \%pystr_in\% list(c(1, 2, 3), c("yay", "cats"), c("dogs", "are", "okay")) # TRUE
c("yay", "frogs") \%pystr_in\% list(c(1, 2, 3), c("yay", "cats"), c("dogs", "are", "okay")) # FALSE

}
\references{
\url{https://docs.python.org/3.7/reference/expressions.html#in}
}
